#!/bin/bash

# ----------------------------------
# Step #1: Define variables
# ----------------------------------

EDITOR=vim
PASSWD=/etc/passwd
RED='\033[0;41;30m'
STD='\033[0;0;39m'
 
# ----------------------------------
# Step #2: User defined function
# ----------------------------------

pause(){
	local stayorgo
	read -p "Press only [Enter] key to continue, OR anything else then [Enter] to exit" stayorgo
	if [[ $stayorgo == "" ]]; then
		:
	else
		exit 0
	fi	
}

one(){
	clear
	echo "Here are the available network interfaces on your machine..."
	echo ""
	ifconfig -l
	echo ""
        pause
}
 
two(){
	clear
	echo "Your broadcast address is..."
	echo ""
	ifconfig | grep broadcast | awk '{print $6}'
	echo ""
        pause
}

three(){
	clear
	echo "Here are the IP addresses... (using arp -a)"
	echo ""
	arp -a | awk '{print $2}' | tr -d "()"
	echo ""
	pause
}

four(){
	local interface
	echo "Here are your interfaces names that are most likely to be your WI-FI interface:"
	echo ""
	ifconfig -l | grep -o -E "en.|eth.|wlan."
	echo ""
	read -p "Please enter your WI-FI interface name from this list... (choose en1 as default)" interface
	clear
	echo "Here is the MAC address of your WI-FI card..."
	echo ""
	ifconfig $interface | grep ether | tr -d "\t" | awk '{print $2}'
	echo ""
	pause
}

five(){
	echo "The default gateway is..."
	echo ""
	netstat -rn | grep -m1 default | awk '{print $2}'
	echo ""
	pause
}

six(){
	local yesorno
	echo "Here is/are the IP addresses of the DNS server you are using:"
	echo ""
	cat /etc/resolv.conf
	echo ""
	read -p "Do you want more information about your DNS configuration? y/n" yesorno
	if [ "$yesorno" == "y" ]; then
		echo ""
		scutil --dns | less
	else
		:
	fi
	pause
}

show_menus() {
	clear
	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"	
	echo " P L E A S E  P I C K  A N  O P T I O N"
	echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
	echo "1. List Network Interfaces on your machine"
	echo "2. Display your Ethernet Broadcast Address"
	echo "3. List IP addresses on the same subnet as you (router)"
	echo "4. Display MAC address of your WI-FI card"
	echo "5. Display default gateway of your routing table"
	echo "6. Get info about your DNS configuration"
	echo "40. Exit"
}
# read input from the keyboard and take a action
# invoke the one() when the user select 1 from the menu option.
# invoke the two() when the user select 2 from the menu option.
# Exit when user the user select 3 form the menu option.
read_options(){
	local choice
	read -p "Enter choice [ 1 - 3] " choice
	case $choice in
		1) one ;;
		2) two ;;
		3) three ;;
		4) four ;;
		5) five ;;
		6) six ;;
		40) exit 0;;
		*) echo -e "${RED}Error...${STD}" && sleep 2
	esac
}
 
# ----------------------------------------------
# Step #3: Trap CTRL+C, CTRL+Z and quit singles
# ----------------------------------------------
trap '' SIGINT SIGQUIT SIGTSTP
 
# -----------------------------------
# Step #4: Main logic - infinite loop
# ------------------------------------
while true
do
 
	show_menus
	read_options
done
